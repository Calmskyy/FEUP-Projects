/* Generated By:JJTree: Do not edit this line. ASTNewArray.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
import java.util.ArrayList;
public
class ASTNewArray extends SimpleNode {
  public ASTNewArray(int id) {
    super(id);
  }

  public ASTNewArray(Jmm p, int id) {
    super(p, id);
  }

  @Override
  public void analyzeSemantics(ArrayList<SymbolTable> symbolTables, ArrayList<String> errors){

    for(int i = 0; i < this.jjtGetNumChildren(); i++){
  
      this.jjtGetChild(i).setMethod(this.getMethod());
      //this.jjtGetChild(i).setArguments(this.getArguments());
      this.jjtGetChild(i).analyzeSemantics(symbolTables, errors);
      
    }

  }

  @Override
  public String getCode(ArrayList<SymbolTable> symbolTables, SimpleNode stackMethod){

    StringBuilder code = new StringBuilder("");

    // gets child's value
    String value = this.jjtGetChild(0).getVal();
    code.append("bipush " + value + "\n");
    stackMethod.incStack();
    stackMethod.updateMaxStack();

    code.append("newarray int\n");

    return code.toString();

  }

  

  
}
/* JavaCC - OriginalChecksum=009627f6f16f0e094322bc52d7190d3d (do not edit this line) */
