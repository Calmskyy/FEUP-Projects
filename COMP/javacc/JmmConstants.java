/* Generated By:JJTree&JavaCC: Do not edit this line. JmmConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface JmmConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IMPORT = 7;
  /** RegularExpression Id. */
  int CLASS = 8;
  /** RegularExpression Id. */
  int EXTENDS = 9;
  /** RegularExpression Id. */
  int PUBLIC = 10;
  /** RegularExpression Id. */
  int RETURN = 11;
  /** RegularExpression Id. */
  int STATIC = 12;
  /** RegularExpression Id. */
  int VOID = 13;
  /** RegularExpression Id. */
  int MAIN = 14;
  /** RegularExpression Id. */
  int STRING = 15;
  /** RegularExpression Id. */
  int INT = 16;
  /** RegularExpression Id. */
  int BOOLEAN = 17;
  /** RegularExpression Id. */
  int IF = 18;
  /** RegularExpression Id. */
  int ELSE = 19;
  /** RegularExpression Id. */
  int WHILE = 20;
  /** RegularExpression Id. */
  int LENGTH = 21;
  /** RegularExpression Id. */
  int TRUE = 22;
  /** RegularExpression Id. */
  int FALSE = 23;
  /** RegularExpression Id. */
  int THIS = 24;
  /** RegularExpression Id. */
  int NEW = 25;
  /** RegularExpression Id. */
  int ASSIGN = 26;
  /** RegularExpression Id. */
  int AND = 27;
  /** RegularExpression Id. */
  int LESSTHAN = 28;
  /** RegularExpression Id. */
  int SUM = 29;
  /** RegularExpression Id. */
  int SUB = 30;
  /** RegularExpression Id. */
  int MULT = 31;
  /** RegularExpression Id. */
  int DIV = 32;
  /** RegularExpression Id. */
  int NOT = 33;
  /** RegularExpression Id. */
  int L_PAR = 34;
  /** RegularExpression Id. */
  int R_PAR = 35;
  /** RegularExpression Id. */
  int L_BRACE = 36;
  /** RegularExpression Id. */
  int R_BRACE = 37;
  /** RegularExpression Id. */
  int L_BRACKET = 38;
  /** RegularExpression Id. */
  int R_BRACKET = 39;
  /** RegularExpression Id. */
  int SEMICOLON = 40;
  /** RegularExpression Id. */
  int COMMA = 41;
  /** RegularExpression Id. */
  int DOT = 42;
  /** RegularExpression Id. */
  int IDENTIFIER = 43;
  /** RegularExpression Id. */
  int LETTER = 44;
  /** RegularExpression Id. */
  int DIGIT = 45;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 46;
  /** RegularExpression Id. */
  int DECIMAL = 47;
  /** RegularExpression Id. */
  int OCTAL = 48;
  /** RegularExpression Id. */
  int HEXADECIMAL = 49;
  /** RegularExpression Id. */
  int BINARY = 50;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"import\"",
    "\"class\"",
    "\"extends\"",
    "\"public\"",
    "\"return\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"String\"",
    "\"int\"",
    "\"boolean\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"length\"",
    "\"true\"",
    "\"false\"",
    "\"this\"",
    "\"new\"",
    "\"=\"",
    "\"&&\"",
    "\"<\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"!\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "<INTEGER_LITERAL>",
    "<DECIMAL>",
    "<OCTAL>",
    "<HEXADECIMAL>",
    "<BINARY>",
  };

}
